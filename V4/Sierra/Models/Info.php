<?php
/**
 * Info
 *
 * PHP version 5
 *
 * @category Class
 * @package  III\Sierra\V4
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Models;

use \ArrayAccess;
/**
 * Info Class Doc Comment
 *
 * @category    Class
 * @description API information details
 * @package     III\Sierra\V4
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Info implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'apiInfo' => '\Models\DisplayableApiInfo',
        'dbSettings' => '\Models\DbSettings',
        'dsSettings' => '\Models\DsSettings',
        'adminSettings' => '\Models\AdminSettings',
        'webpacSettings' => '\Models\WebpacPXClientSettings',
        'pinVerificationSettings' => '\Models\PinVerificationSettings',
        'marc2INNSettings' => '\Models\Marc2INNSettings'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'apiInfo' => 'apiInfo',
        'dbSettings' => 'dbSettings',
        'dsSettings' => 'dsSettings',
        'adminSettings' => 'adminSettings',
        'webpacSettings' => 'webpacSettings',
        'pinVerificationSettings' => 'pinVerificationSettings',
        'marc2INNSettings' => 'marc2INNSettings'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'apiInfo' => 'setApiInfo',
        'dbSettings' => 'setDbSettings',
        'dsSettings' => 'setDsSettings',
        'adminSettings' => 'setAdminSettings',
        'webpacSettings' => 'setWebpacSettings',
        'pinVerificationSettings' => 'setPinVerificationSettings',
        'marc2INNSettings' => 'setMarc2INNSettings'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'apiInfo' => 'getApiInfo',
        'dbSettings' => 'getDbSettings',
        'dsSettings' => 'getDsSettings',
        'adminSettings' => 'getAdminSettings',
        'webpacSettings' => 'getWebpacSettings',
        'pinVerificationSettings' => 'getPinVerificationSettings',
        'marc2INNSettings' => 'getMarc2INNSettings'
    );
  
    
    /**
      * $apiInfo the API name, version, and revision
      * @var \Models\DisplayableApiInfo
      */
    protected $apiInfo;
    
    /**
      * $dbSettings the database settings
      * @var \Models\DbSettings
      */
    protected $dbSettings;
    
    /**
      * $dsSettings the dataservice settings
      * @var \Models\DsSettings
      */
    protected $dsSettings;
    
    /**
      * $adminSettings the admin settings
      * @var \Models\AdminSettings
      */
    protected $adminSettings;
    
    /**
      * $webpacSettings the WebPAC settings
      * @var \Models\WebpacPXClientSettings
      */
    protected $webpacSettings;
    
    /**
      * $pinVerificationSettings the settings for PIN verification
      * @var \Models\PinVerificationSettings
      */
    protected $pinVerificationSettings;
    
    /**
      * $marc2INNSettings the settings for marc2INN
      * @var \Models\Marc2INNSettings
      */
    protected $marc2INNSettings;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->apiInfo = $data["apiInfo"];
            $this->dbSettings = $data["dbSettings"];
            $this->dsSettings = $data["dsSettings"];
            $this->adminSettings = $data["adminSettings"];
            $this->webpacSettings = $data["webpacSettings"];
            $this->pinVerificationSettings = $data["pinVerificationSettings"];
            $this->marc2INNSettings = $data["marc2INNSettings"];
        }
    }
    
    /**
     * Gets apiInfo
     * @return \Models\DisplayableApiInfo
     */
    public function getApiInfo()
    {
        return $this->apiInfo;
    }
  
    /**
     * Sets apiInfo
     * @param \Models\DisplayableApiInfo $apiInfo the API name, version, and revision
     * @return $this
     */
    public function setApiInfo($apiInfo)
    {
        
        $this->apiInfo = $apiInfo;
        return $this;
    }
    
    /**
     * Gets dbSettings
     * @return \Models\DbSettings
     */
    public function getDbSettings()
    {
        return $this->dbSettings;
    }
  
    /**
     * Sets dbSettings
     * @param \Models\DbSettings $dbSettings the database settings
     * @return $this
     */
    public function setDbSettings($dbSettings)
    {
        
        $this->dbSettings = $dbSettings;
        return $this;
    }
    
    /**
     * Gets dsSettings
     * @return \Models\DsSettings
     */
    public function getDsSettings()
    {
        return $this->dsSettings;
    }
  
    /**
     * Sets dsSettings
     * @param \Models\DsSettings $dsSettings the dataservice settings
     * @return $this
     */
    public function setDsSettings($dsSettings)
    {
        
        $this->dsSettings = $dsSettings;
        return $this;
    }
    
    /**
     * Gets adminSettings
     * @return \Models\AdminSettings
     */
    public function getAdminSettings()
    {
        return $this->adminSettings;
    }
  
    /**
     * Sets adminSettings
     * @param \Models\AdminSettings $adminSettings the admin settings
     * @return $this
     */
    public function setAdminSettings($adminSettings)
    {
        
        $this->adminSettings = $adminSettings;
        return $this;
    }
    
    /**
     * Gets webpacSettings
     * @return \Models\WebpacPXClientSettings
     */
    public function getWebpacSettings()
    {
        return $this->webpacSettings;
    }
  
    /**
     * Sets webpacSettings
     * @param \Models\WebpacPXClientSettings $webpacSettings the WebPAC settings
     * @return $this
     */
    public function setWebpacSettings($webpacSettings)
    {
        
        $this->webpacSettings = $webpacSettings;
        return $this;
    }
    
    /**
     * Gets pinVerificationSettings
     * @return \Models\PinVerificationSettings
     */
    public function getPinVerificationSettings()
    {
        return $this->pinVerificationSettings;
    }
  
    /**
     * Sets pinVerificationSettings
     * @param \Models\PinVerificationSettings $pinVerificationSettings the settings for PIN verification
     * @return $this
     */
    public function setPinVerificationSettings($pinVerificationSettings)
    {
        
        $this->pinVerificationSettings = $pinVerificationSettings;
        return $this;
    }
    
    /**
     * Gets marc2INNSettings
     * @return \Models\Marc2INNSettings
     */
    public function getMarc2INNSettings()
    {
        return $this->marc2INNSettings;
    }
  
    /**
     * Sets marc2INNSettings
     * @param \Models\Marc2INNSettings $marc2INNSettings the settings for marc2INN
     * @return $this
     */
    public function setMarc2INNSettings($marc2INNSettings)
    {
        
        $this->marc2INNSettings = $marc2INNSettings;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
